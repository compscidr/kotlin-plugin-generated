/*
 * Copyright 2018 Fabian Mastenbroek.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.0"
    id "org.jlleitschuh.gradle.ktlint" version "6.2.1"
    id "jacoco"
}

def compilerPlugin = project(':plugin-compiler')
def pluginJar = compilerPlugin.jar.archivePath
evaluationDependsOn(":$compilerPlugin.name")

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher:$junit_platform_version"
}

/* Build setup */
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        // We force the plugin to make the annotations visible at runtime
        freeCompilerArgs = ["-Xplugin=$pluginJar", "-P", "plugin:nl.fabianm.kotlin.plugin.generated:visible=true"]
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        // We force the plugin to make the annotations visible at runtime
        freeCompilerArgs = ["-Xplugin=$pluginJar", "-P", "plugin:nl.fabianm.kotlin.plugin.generated:visible=true"]
    }
}

/* Test setup */
test {
    useJUnitPlatform {}

    testLogging {
        events 'passed', 'skipped', 'failed'
    }

    reports {
        html.enabled = true
    }

    finalizedBy jacocoTestReport
}

jacocoTestReport {
    sourceSets sourceSets.main, sourceSets.test
}
